<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.persistent</groupId>
    <artifactId>jerseySpringJPA</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>jerseySpringJPA Jersey Webapp</name>
    <build>
        <finalName>jerseySpringJPA</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
			   <groupId>org.mortbay.jetty</groupId>
			   <artifactId>maven-jetty-plugin</artifactId>
			   <version>6.1.10</version>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-antrun-plugin</artifactId>
		        <version>1.7</version>
		        <executions>
		          <execution>
		            <id>compile</id>
		            <phase>compile</phase>
		            <configuration>
		              <target>
		                <property name="compile_classpath" refid="maven.compile.classpath"/>
		                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
		                <property name="test_classpath" refid="maven.test.classpath"/>
		                <property name="plugin_classpath" refid="maven.plugin.classpath"/>
		
		                <echo message="compile classpath: ${compile_classpath}"/>
		                <echo message="runtime classpath: ${runtime_classpath}"/>
		                <echo message="test classpath: ${test_classpath}"/>
		                <echo message="plugin classpath: ${plugin_classpath}"/>
		              </target>
		            </configuration>
		            <goals>
		              <goal>run</goal>
		            </goals>
		            </execution>
		            <execution>
						<id>tomcat-deploy-copy</id>
					<phase>install</phase>
					<configuration>
					<target>
					<echo message="*----- COPY TOMCAT -----* ${CATALINA_HOME}"/>
					<copy file="${basedir}/target/jerseySpringJPA.war" todir="${CATALINA_HOME}/webapps" />
					</target>
					</configuration>
					<goals>
					<goal>run</goal>
					</goals>
				  </execution>
		        </executions>
      		</plugin>
      		<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<version>2.2</version>
				<executions>
				<execution>
				<phase>pre-integration-test</phase>
				<goals>
				<goal>start-server</goal>
				</goals>
				<configuration>
				<background>true</background>
				<!--
				To capture the logs from Selenium to a file, enable logOutput.
				This will create a server.log that captures all of the output.
				<logOutput>false</logOutput>
				-->
				</configuration>
				</execution>
				<execution>
				<id>stop</id>
				<phase>post-integration-test</phase>
				<goals>
				<goal>stop-server</goal>
				</goals>
				</execution>
				</executions>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.12</version>
			    <configuration>
					 <classpathDependencyExcludes>
            			<classpathDependencyExcludes>org.springframework:spring-core</classpathDependencyExcludes>
            			<classpathDependencyExcludes>org.springframework:spring-beans</classpathDependencyExcludes>
            			<classpathDependencyExcludes>org.springframework:spring-context</classpathDependencyExcludes>
            			<classpathDependencyExcludes>org.springframework:spring-web</classpathDependencyExcludes>
            			<classpathDependencyExcludes>org.springframework:spring-aop</classpathDependencyExcludes>
          			</classpathDependencyExcludes>
					<classpathDependencyScopeExclude>compile,runtime,test</classpathDependencyScopeExclude>
					<!--
					Skip the normal tests, we'll run them in the integration-test
					phase
					-->
					<skip>true</skip>
				</configuration>
			<executions>
			   <execution>
				  <phase>integration-test</phase>
					<goals>
						<goal>test</goal>
					</goals>
					<configuration>
						<skip>false</skip>
					</configuration>
				</execution>
			</executions>
		  </plugin>
   		</plugins>
	</build>
	<properties>
	   <spring.version>3.0.5.RELEASE</spring.version>
	   <hibernate.version>3.3.2.GA</hibernate.version>
	   <commons-dbcp.version>1.2.2</commons-dbcp.version>
	   <commons-logging.version>1.0.4</commons-logging.version>
	   <jersey-version>1.8</jersey-version>
 	</properties>
    <dependencies>
    	<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>2.4</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
		    <version>${jersey-version}</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.jersey</groupId>
		     <artifactId>jersey-json</artifactId>
		     <version>${jersey-version}</version>
		 </dependency>
		<dependency>
		   <groupId>com.sun.jersey.contribs</groupId>
		   <artifactId>jersey-spring</artifactId>
		   <version>${jersey-version}</version>
		 </dependency>
		<!-- Adding in JPA With It's Requirements -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
		</dependency>
		
		<dependency>
      		<groupId>org.springframework</groupId>
      		<artifactId>org.springframework.jdbc</artifactId>
     		 <version>${spring.version}</version>
    	</dependency>
		 <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>org.springframework.context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
        <groupId>org.springframework</groupId>
        	<artifactId>org.springframework.orm</artifactId>
        	<version>${spring.version}</version>
     	 </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
        <dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp.version}</version>
			<scope>runtime</scope>
	    </dependency>
	 	<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.1_3</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
			<!--
			Explicitly remove: See:
			http://blog.interface21.com/main/2007/06/11/asm-version-incompatibilities-using-spring-autowired-with-hibernate/
			-->
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm-attrs</artifactId>
				</exclusion>
				<exclusion>
					<groupId>cglib</groupId>
					<artifactId>cglib</artifactId>
				</exclusion>
			</exclusions>
			</dependency>
			<dependency>
			     <groupId>hsqldb</groupId>
			     <artifactId>hsqldb</artifactId>
			     <version>2.2.8</version>
			</dependency>
			<!-- JPA Additions end. -->

       <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.distributions</groupId>
            <artifactId>web-all</artifactId>
            <version>10.0-build-20080430</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.embedded</groupId>
            <artifactId>gf-embedded-api</artifactId>
            <version>1.0-alpha-4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>org.seleniumhq.selenium.client-drivers</groupId>
		     <artifactId>selenium-java-client-driver</artifactId>
		     <version>1.0.2</version>
		</dependency>
		<dependency>
            <groupId>org.apache.log4j</groupId>
            <artifactId>com.springsource.org.apache.log4j</artifactId>
            <version>1.2.15</version>
        </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>com.springsource.org.apache.commons.logging</artifactId>
            <version>1.1.1</version>
        </dependency>
   </dependencies>
   <repositories>
       <repository>
		<id>maven2-repository.java.net</id>
		<name>Java.net Repository for Maven</name>
		<url>http://download.java.net/maven/2/</url>
		<layout>default</layout>
		</repository>
		<repository>
            <id>glassfish-maven2-repository.dev.java.net</id>
            <name>Java.net Maven 2 Repository for GlassFish</name>
            <url>http://download.java.net/maven/glassfish/</url>
            <layout>default</layout>
        </repository>
         <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Maven 2 Repository</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>maven-repository.dev.java.net</id>
            <name>Java.net Maven 1 Repository (legacy)</name>
            <url>http://download.java.net/maven/1</url>
            <layout>legacy</layout>
        </repository>
        <repository>
            <id>com.springsource.repository.bundles.release</id>
            <name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
            <url>http://repository.springsource.com/maven/bundles/release</url>
        </repository>
        <repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </pluginRepository>
        <pluginRepository>
            <id>maven-repository.dev.java.net</id>
            <name>Java.net Maven 1 Repository (legacy)</name>
            <url>http://download.java.net/maven/1</url>
            <layout>legacy</layout>
        </pluginRepository>
    </pluginRepositories>
</project>